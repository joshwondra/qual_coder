/* typefaces to consider: 
General: Inter, Rubik, Fira Sans, Roboto, Karla
Text to code: Source Serif Pro, Eczar, Roboto Slab, PT Serif, Neuton, Raleway, Karla
*/


/* add color palette */
:root {
    --dark-blue: rgba(0, 107, 174, 1);
    --blue: rgba(71, 213, 255, 1);
    --light-blue: rgba(226, 248, 255, 1);
    --orange: rgba(255, 158, 128, 1);
    --orange-hover: rgba(255, 158, 128, .12);
    --text-grey: rgba(96, 96, 96, 1);
    --light-grey: rgba(200, 200, 200, 1);
}

body {
    background: var(--light-blue);
    font-family: "Rubik";
    font-size: 1.2vw;
    font-weight: 500;
    color: var(--text-grey);
    margin: 0 10vw;
}

header {
    margin: 2vw;
}

h1 {
    margin-block: 0;
    font-family: "Rubik";
    color: var(--dark-blue);
    font-size: 4vw;
    font-weight: normal;
}

h2 {
    font-family: "Rubik";
    margin-block: 0;
    font-size: 3vw;
    color: white;
    font-weight: normal;
}

h3 {
    font-family: "Rubik";
    margin-block: 0;
    font-size: 2vw;
    color: var(--blue);
    font-weight: normal;
}

p {
}

a {
    text-decoration: none;
}

footer {
    text-align: center;
}

button {
    background: none;
    border: none;
}

.button, input[type=submit] {
    border-radius: 4px;
    padding: .5vw 1vw;
    text-transform: uppercase;
}

.button {
    color: var(--orange);
}

.button:hover {
    opacity: .9;
    background: var(--orange-hover);
}

input[type="checkbox"] {
    display: none;
}

input[type="checkbox"] + label {
    border-radius: 50px;
    padding: .5vw;
    opacity: .6;
}

input[type="checkbox"] + label:hover {
    cursor: pointer;
}

input[type="checkbox"]:checked + label {
    opacity: 1;
}

input[type=submit], input[type="checkbox"] + label {
    color: white;
    background: var(--orange);
    border: 0 none;
}

input[type=submit]:hover {
    opacity: .88;
    box-shadow: 0 .12vw .33vw rgba(0,0,0,0.12), 0 .12vw .25vw rgba(0,0,0,0.24);
}

input[type="checkbox"] + label {
    border-radius: 50px;
    color: white;
    background: var(--orange);
    border: 0 none;
}

.container {
    display: flex;
}

    .row {
        display: flex; 
        flex-direction: row;
        flex-wrap: wrap;
        width: 100%;
    }

    .column {
        display: flex;
        flex-direction: column;
        flex-basis: 100%;
        flex: 1;
    }

.card { /* Credit for much of the card CSS (including hover): https://codepen.io/sdthornton/pen/wBZdXq */
    max-height: 50vw;
    max-width: 60vw;
    margin: 2vw;
    border-radius: .5vw;
    background: white;
    box-shadow: 0 .25vw .75vw rgba(0,0,0,0.12), 0 .25vw .5vw rgba(0,0,0,0.24);
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);
    overflow: hidden;
}

    .card:hover {
        box-shadow: 0 1.75vw 3.5vw rgba(0,0,0,0.25), 0 1.25vw 1.25vw rgba(0,0,0,0.22);
    }

    .card-header, .card-body, .text-header {
        display: flex;
        padding: 2vw;
    }

    .card-header {
        background: var(--blue);
    }

        .card-header-thumbnail {
            font-size: 3vw;
            margin-right: 1vw;
            color: var(--orange);
        }

    .card-body {
        background: white;
    }

        .card-body-item {
            margin: 2vw 0;
            display: block;
        }

.flash-wrapper {
    background: white;
    padding: 2vw;
    position: fixed;
    bottom: 50%;
    left: 50%;
    transform: translateX(-50%);
    box-shadow: 0 .25vw .75vw rgba(0,0,0,0.12), 0 .25vw .5vw rgba(0,0,0,0.24);
    transition: all 0.3s cubic-bezier(.25,.8,.25,1);
}

#text-codes-wrapper {
    background: white;
    height: fit-content;
}

.text {
    border-left: solid .1vw rgba(240, 240, 240, 1);
    font-family: "Roboto Slab";
    line-height: 1.5;
    color: var(--text-grey);
    }

.codes {
    padding: 1vw;
    position: sticky;
    float: left;
    top: 0vw;
    background: white;
    max-width: 20%;
}

    .codes-item {
        display: block;
        margin: 1.4vw 0;
        font-size: 1vw;
        font-weight: 400;
    }

.dim-background {
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba(0, 0, 0, .7);
}

.dismiss-button {
    display: block;
    position: absolute;
    right: 0;
    bottom: 0;
}